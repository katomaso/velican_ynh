#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
ynh_print_OFF; password=$YNH_APP_ARG_PASSWORD; ynh_print_ON
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME
app_nb=$YNH_APP_INSTANCE_NUMBER
app_path=/home/yunohost.app/$app

theme_url=$YNH_APP_ARG_THEME_URL
theme_name=$YNH_APP_ARG_THEME_NAME

title=$YNH_APP_ARG_TITLE
subtitle=$YNH_APP_ARG_SUBTITLE

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=2

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=is_public --value=$is_public
ynh_app_setting_set --app=$app --key=password --value=$password
ynh_app_setting_set --app=$app --key=app_path --value=$app_path
ynh_app_setting_set --app=$app --key=final_path --value=$final_path
ynh_app_setting_set --app=$app --key=theme_name --value=$theme_name
ynh_app_setting_set --app=$app --key=theme_url --value=$theme_url


#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_install_app_dependencies unzip pelican

#=================================================
# DOWNLOAD AND EXTRACT SOURCE
#=================================================
mkdir -p $app_path
#ynh_setup_source --dest_dir=$app_path
wget -O velican.zip https://github.com/katomaso/velican/archive/master.zip
unzip velican.zip
mv velican-master/publisher.py $app_path/
rm -rf velican.zip velican-master

mkdir -p $app_path/plugins
mkdir -p $app_path/themes

# install readtime plugin
wget -O readtime.zip https://github.com/wayofnumbers/pelican-readtime/archive/master.zip
unzip -d $app_path/plugins/ readtime.zip
mv $app_path/plugins/pelican-readtime-master $app_path/plugins/pelican-readtime
rm readtime.zip

# install neighbors plugin
wget -O neighbors.zip https://github.com/pelican-plugins/neighbors/archive/main.zip
unzip neighbors.zip
mv neighbors-main/pelican/plugins/neighbors $app_path/plugins/
rm -rf neighbors.zip neighbors-main

# install user-provided theme
wget -O theme.zip $theme_url
unzip -d $app_path/themes/ theme.zip
if [ -e "$app_path/themes/${theme_name}-master" ]; then
	mv "$app_path/themes/${theme_name}-master" "$app_path/themes/${theme_name}"
fi
rm theme.zip

#=================================================
# SYSTEMD CONFIGURATION
#=================================================
ynh_add_systemd_config --others_var "app_path"
yunohost service add $app

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --weight=2

# Create a dedicated nginx config
ynh_add_nginx_config
echo "admin:$(openssl passwd -crypt "$password")" > $app_path/.passwd

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# create a system user
ynh_system_user_create --username=$app --home_dir=$app_path


#=================================================
# MODIFY A CONFIG FILE
#=================================================
config=$final_path/pelicanconf.py

cp ../conf/pelicanconf.py $config
ynh_replace_string --match_string="__APPPATH__" --replace_string="$app_path" --target_file="$config"
ynh_replace_string --match_string="__DOMAIN__" --replace_string="$domain" --target_file="$config"
ynh_replace_string --match_string="__PATH__" --replace_string="$path_url" --target_file="$config"
ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="$config"
ynh_replace_string --match_string="__AUTHOR__" --replace_string="$author" --target_file="$config"
ynh_replace_string --match_string="__TITLE__" --replace_string="$title" --target_file="$config"
ynh_replace_string --match_string="__SUBTITLE__" --replace_string="$subtitle" --target_file="$config"
ynh_replace_string --match_string="__THEMENAME__" --replace_string="$theme_name" --target_file="$config"

#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
mkdir -p $final_path
chmod u+s $final_path
chown www-data:www-data $final_path
chown :www-data $app_path/.passwd
chown :www-data $app_path/content
chmod g+ws $app_path/content

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
    ynh_permission_update --permission "main" --add visitors
fi

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="systemd" --line_match="[INFO] Listening on \"127.0.0.1:$port\" without TLS"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
